strigi::
library(stringi)
library(stringi::)
strsplit(tst2, "\n")
strsplit(tst2, "\\n")
?strsplit
strsplit(tst2, [:newline:])
tst -split [\n]
(tst -split ['\n'])
strsplit(tst2, "\n", fixed = FALSE)
strsplit(tst2, "\\n", fixed = FALSE)
tst2.split('\n')
strsplit(tst2, '\n')
strsplit(tst2, '\\n')
strsplit(tst2, '\\r')
strsplit(tst2, \n)
grep("\n", tst2, value = TRUE)
grep("\\n", tst2, value = TRUE)
tst2.splitlines()
paste(tst2, "\n")
paste(tst2, "\\n")
tst2
str(tst2)
tst2[1][90]
tst2[1,90]
str(tst2)
#str_c(str_extract_all(tst, "[[:alnum:]]"), sep = '""')
#sub(pattern = "\\|", replacement = "", tst)
tst2<-data.frame(str_replace_all(tst1, pattern = "\\|", ""), stringsAsFactors = FALSE)
str(tst2)
#str_c(str_extract_all(tst, "[[:alnum:]]"), sep = '""')
#sub(pattern = "\\|", replacement = "", tst)
tst2<-data.frame(str_replace_all(tst1, pattern = "\\|", ""))
library(stringr)
tst<-data.frame(read.csv(file = 'C:/temp/tournamentinfo.txt', header = TRUE, sep = "-", stringsAsFactors = FALSE, encoding = 'UTF-8'))
#<-gsub("\\v|\\h", "", tst)
tst1<-str_c(tst$X, tst$X.1)
tst1
#str_c(str_extract_all(tst, "[[:alnum:]]"), sep = '""')
#sub(pattern = "\\|", replacement = "", tst)
tst2<-data.frame(str_replace_all(tst1, pattern = "\\|", ""))
tst2
tst3<- data.frame(str_replace_all(tst2, "\" ?,? ?" , ""))
tst3
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(readxl)
library(ggplot2)
library(plotrix)
library(plotly)
library(gapminder)
library(RMySQL)
memory.limit()
## To increase the storage capacity
memory.limit(size=32000)
apprDstr<-data.frame(read.csv(file = 'APPR_DISTRICT_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
apprSch<-data.frame(read.csv(file = 'APPR_SCHOOL_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
apprState<-data.frame(read.csv(file = 'APPR_STATEWIDE_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
#d<-apprDstr%>%
#filter(OVERALL_SCORE != "Suspended" & OVERALL_SCORE > 98)%>%
#filter(OVERALL_RATING == "Highly Effective")
#h<-inner_join(d, apprSch, by="DISTRICT_BEDS")
#View(h)
#fapprState<-
#apprSch%>%
#select(PER_PUPIL_EXPENDITURE)%>%unique()
#filter(EDUCATOR_ID == 5019496)
mydb = dbConnect(MySQL(), user='root', password='123456', dbname='education', host='localhost')
dbListTables(mydb)
dbRemoveTable(mydb, "apprdstr")
dbWriteTable(mydb, "apprDstr",apprDstr, overwrite = TRUE)
apprDstrdata<-dbGetQuery(mydb, "select * from apprDstr")
dbRemoveTable(mydb, "apprsch")
dbWriteTable(mydb, "apprSch",apprSch, overwrite = TRUE)
apprSchdata<-dbGetQuery(mydb, "select * from apprSch")
dbRemoveTable(mydb, "apprstate")
dbWriteTable(mydb, "apprState",apprState, overwrite = TRUE)
apprStatedata<-dbGetQuery(mydb, "select * from apprState")
dbDisconnect(mydb)
mydb = dbConnect(MySQL(), user='root', password='123456', dbname='education', host='localhost')
joineddata<-dbGetQuery(mydb, "select d.educator_id as EducatorD_ID, d.DISTRICT_NAME, s.Educator_id as EducatorS_ID, s.School_name, district_needs_category, per_pupil_expenditure,
d.overall_score, d.overall_rating, s.growth_rating from apprdstr d
inner join apprsch s on  d.district_beds = s.district_beds limit 1000000")
dbDisconnect(mydb)
write.csv(joineddata, file="JoinedEDUData.csv")
getwd()
setwd("./CUNYSPS/DATA606StatisticsandProbabities/Work4")
getwd()
startLab('Lab4')
librar(data606)
librar(DATA606)
library(DATA606)
startLab('Lab4')
startLab('Lab4')
startLab('Lab4')
library(DATA606)
startLab('Lab4')
library(DATA606)
startLab('Lab04')
vignette(package='DATA606') # Lists vignettes in the DATA606 package
vignette('os3')             # Loads a PDF of the OpenIntro Statistics book
data(package='DATA606')     # Lists data available in the package
getLabs()                   # Returns a list of the available labs
shiny_demo()                # Lists available Shiny apps
startLab('Lab4a')
load("more/ames.RData")
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
summary(area)
hist(area)
samp1 <- sample(area, 50)
samp1
hist(sampl)
hist(samp1)
mean(samp1)
samp2 <- sample(area, 50)
samp2 <- sample(area, 50)
mean(samp1)
mean(samp2)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
str(sample_means50)
5000 * 4
sum(5000 * 50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
print(i)
}
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
print(i)
}
sample_means_small <- rep(0, 100)
for(i in 1:100){
samp <- sample(area, 50)
sample_means_small[i] <- mean(samp)
print(i)
}
sample_means_small <- rep(0, 100)
for(i in 1:100){
samp <- sample(area, 50)
sample_means_small[i] <- mean(samp)
print(sample_means_small)
}
sample_means_small <- rep(0, 100)
for(i in 1:100){
samp <- sample(area, 50)
sample_means_small[i] <- mean(samp)
}
print(sample_means_small)
sampp <- sample(price, 50)
mean(sampp)
sampp <- sample(price, 50)
mean(sampp)
sampp <- sample(price, 50)
mean(sampp)
sampp <- sample(price, 50)
mean(sampp)
sampp <- sample(price, 50)
mean(sampp)
sampp <- sample(price, 50)
sampp <- sample(price, 50)
samp<- rep(0, 5000)
for(i in 1:5000){
sample_means50 <- sample(price, 50)
sample_means_50[i] <- mean(samp)
}
samp<- rep(0, 5000)
for(i in 1:5000){
sample_means50 <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means_small)
hist(sample_means50)
samp<- rep(0, 5000)
for(i in 1:5000){
sample_means50 <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
hist(sample_means50)
mean(sample_means50)
sample_means
sample_means50
samp<- rep(0, 5000)
for(i in 1:5000){
sample_means50 <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
sample_means50
samp<- rep(NA, 5000)
for(i in 1:5000){
sample_means50 <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
sample_means50
samp<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
sample_means50
sample_means50
mean(sample_means50)
hist(sample_means50)
samp<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
samp<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means150[i] <- mean(samp)
}
samp<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means150[i] <- mean(samp)
}
sample_means50<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
sample_means50<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
mean(sample_means50)
sample_means150<- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means150[i] <- mean(samp)
}
hist(sample_means150)
mean(sample_means150)
getwd()
startLab('Lab4b')
load("more/ames.RData")
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
hist(samp)
summary(samp)
hist(samp)
summary(samp)
samp
samp <- sample(population, 60)
hist(samp)
samp <- sample(population, 60)
hist(samp)
summary(samp)
hist(samp)
summary(samp)
population
sample_mean <- mean(samp)
sample_mean
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
hist(samp)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
plot_ci(lower_vector, upper_vector, mean(population))
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - 2.576 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 2.576 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
n<- 50
for(i in 1:50){
samp <- sample(population, n)
samp_mean[i] <- mean(samp)
samp_sd[i] <- sd(samp)
}
plot_ci(lower_vector, upper_vector, mean(population))
?var
?var()
population <- ames$Gr.Liv.Area
population
(84.71-80.31)/2
(84.71-89.11)/2
2.2/sqrt(436)
2.2/sqrt(436)*1.96
4.4/sqrt(436)*1.96
knitr::opts_chunk$set(echo = TRUE)
sd <- 4.31
sample_mean <- 30.69
se <- sd(samp) / sqrt(36)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
sd <- 4.31
sample_mean <- 30.69
se <- sd(samp) / sqrt(36)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
se <- sd(sample_mean) / sqrt(36)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
sds <- 4.31
sample_mean <- 30.69
se <- sds / sqrt(36)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
sds <- 4.31
sample_mean <- 30.69
se <- sds / sqrt(36)
lower <- sample_mean - 1.645 * se
upper <- sample_mean + 1.645 * se
c(lower, upper)
sds <- 4.31
sample_mean <- 30.69
se <- sds / sqrt(36)
lower <- sample_mean - 1.645 * se
upper <- sample_mean + 1.645 * se
h<-c(lower, upper)
se
sample_mean - 32/se
(sample_mean - 32)/se
(32-sample_mean )/se
pnorm(zs)
knitr::opts_chunk$set(echo = TRUE)
round(1-pnorm(979, 1300, sqrt(40000)), digits =4)
pnorm(zs)
zs <-(32-sample_mean )/se
pnorm(zs)
1-pnorm(zs)
h<-c(lower, upper)
h
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
zs <-(100-sample_mean )/se
pv<-1-pnorm(zs)
pv
zs
se
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
zs <-(100-sample_mean )/se
pv<-1-pnorm(zs)
pv
zs
sample_mean
sz
zs
se
pnorm(zs)
1-pnorm(zs)
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
lower <- sample_mean - 1.645 * se
upper <- sample_mean + 1.645 * se
h<-c(lower, upper)
h
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
h<-c(lower, upper)
h
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
lower <- sample_mean - 1.645 * se
upper <- sample_mean + 1.645 * se
h<-c(lower, upper)
h
sds <- 6.5
sample_mean <- 118.2
se <- sds / sqrt(36)
zs <-(100-sample_mean )/se
pv<-pnorm(zs)
pc
pv
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(30)
zs <-(10500-sample_mean )/se
pv<-pnorm(zs)
pv
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(1)
zs <-(10500-sample_mean )/se
pv<-pnorm(zs)
pv
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(1)
zs <-(10500-sample_mean )/se
pv<-pnorm(zs)
pv
pv<-pnorm(zs)
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(15)
zs <-(10500-sample_mean )/se
pv<-pnorm(zs)
pv
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(15)
zs <-(10500-sample_mean )/se
pv<-pnorm(zs)
sz
zs
pv
pv<-1-pnorm(zs)
pv
se
zs
zs
pv
round(pv *100, 2)
round(pv *100)
round(pv *.0001)
round(pv *1000000)
pv
x=seq(-3,3,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-3,.18,length=200)
y=dnorm(x)
polygon(c(-3,x,.18),c(0,y,0),col="gray")
x=seq(-3,3,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-3,.pv,length=200)
x=seq(-3,3,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-3,pv,length=200)
y=dnorm(x)
polygon(c(-3,x,pv),c(0,y,0),col="gray")
sds <- 1000
sample_mean <- 9000
se <- sds / sqrt(1)
zs <-(10500-sample_mean )/se
pv1<-pnorm(zs)
x=seq(-3,3,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-3,pv1,length=200)
y=dnorm(x)
polygon(c(-3,x,pv1),c(0,y,0),col="gray")
apprDstr<-data.frame(read.csv(file = 'https://raw.githubusercontent.com/apag101/CUNYSPS/master/IS607/Project3/APPR_DISTRICT_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
apprSch<-data.frame(read.csv(file = 'https://raw.githubusercontent.com/apag101/CUNYSPS/master/IS607/Project3/APPR_SCHOOL_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
apprSch<-data.frame(read.csv(file = 'https://raw.githubusercontent.com/apag101/CUNYSPS/master/IS607/Project3/APPR_SCHOOL_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
apprState<-data.frame(read.csv(file = 'APPR_STATEWIDE_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
```
apprState<-data.frame(read.csv(file = 'https://raw.githubusercontent.com/apag101/CUNYSPS/master/IS607/Project3/APPR_STATEWIDE_RESEARCHER_FILE_DATA.csv', header = TRUE, sep= ",", stringsAsFactors = FALSE))
mydb = dbConnect(MySQL(), user='root', password='123456', dbname='education', host='localhost')
dbListTables(mydb)
dbRemoveTable(mydb, "apprdstr")
dbWriteTable(mydb, "apprDstr",apprDstr, overwrite = TRUE)
dbRemoveTable(mydb, "apprsch")
dbWriteTable(mydb, "apprSch",apprSch, overwrite = TRUE)
dbRemoveTable(mydb, "apprstate")
dbWriteTable(mydb, "apprState",apprState, overwrite = TRUE)
dbDisconnect(mydb)
(MySQL(), user='root', password='123456', dbname='education', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='123456', dbname='education', host='localhost')
joineddata<-dbGetQuery(mydb, "select d.educator_id as EducatorD_ID, d.DISTRICT_NAME, s.Educator_id as EducatorS_ID, s.School_name, district_needs_category, per_pupil_expenditure,
d.overall_score, d.overall_rating, s.growth_rating from apprdstr d
inner join apprsch s on  d.district_beds = s.district_beds limit 1000000")
head(joineddata)
View(joineddata)
install.packages("dt")
install.packages("DT")
